trigger:
  branches:
    include:
      - main  # Trigger on main branch (adjust if needed)

pool:
  vmImage: 'ubuntu-latest'  # Use Ubuntu image for Node.js execution

variables:
  # File paths for Postman Collection and Environment JSON
  postmanCollection: 'ADA UAT.postman_collection.json'
  postmanEnvironment: 'ada uat.postman_environment with cred.json'

  # Inject these values dynamically as variables
  TenantID: '836eb414-c26e-4581-82aa-a4f3795facd2'
  ClientId: 'b667784b-4777-4aee-9cd4-ac1efa39c786'
  Client_secret: 'b667784b-4777-4aee-9cd4-ac1efa39c786'
  auth_user: '426872cf14b0d0f81ffade94821faabf'
  auth_pass: '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'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - script: |
      npm install -g newman
    displayName: 'Install Newman CLI'

  - checkout: self
    displayName: 'Checkout Repository'

  - script: |
      echo "Running Postman Collection with dynamic environment variables..."
      newman run "$(postmanCollection)" \
      -e "$(postmanEnvironment)" \
      --env-var "TenantID=$(TenantID)" \
      --env-var "ClientId=$(ClientId)" \
      --env-var "Client_secret=$(Client_secret)" \
      --env-var "auth_user=$(auth_user)" \
      --env-var "auth_pass=$(auth_pass)" \
      --reporters cli,junit \
      --reporter-junit-export "TestResults/Results.xml"
    displayName: 'Run Postman Collection'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/Results.xml'
      testRunTitle: 'Postman API Test Results'
    condition: succeededOrFailed()
    displayName: 'Publish Test Results'
